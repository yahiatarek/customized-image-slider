{
  "root": true,
  "overrides": [
    {
      "files": ["*.ts"],
      "parserOptions": {
        "project": ["tsconfig.base.json"],
      },
      "plugins": [
        "eslint-plugin-jsdoc",
        "eslint-plugin-prefer-arrow",
        "eslint-plugin-unicorn",
        "eslint-plugin-import",
        "@angular-eslint/eslint-plugin",
        "@typescript-eslint",
        "max-params-no-constructor",
      ],
      "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates",
        "plugin:@nrwl/nx/angular",
        "plugin:prettier/recommended",
        "plugin:unicorn/recommended",
      ],
      "rules": {
        // ESLint possible errors - https://eslint.org/docs/rules/#possible-problems
        "array-callback-return": "error",
        "no-constructor-return": "error",
        // TODO: enable for js: "no-duplicate-imports": "error",
        "no-promise-executor-return": "error",
        "no-self-compare": "error",
        "no-template-curly-in-string": "error",
        "no-unmodified-loop-condition": "error",
        "no-unreachable-loop": "error",
        "no-use-before-define": "off",
        "require-atomic-updates": "error",

        // ESLint suggestions - https://eslint.org/docs/rules/#suggestions
        "accessor-pairs": "error",
        "arrow-body-style": "error",
        "block-scoped-var": "error",
        "complexity": ["error", 7],
        "consistent-return": "error",
        "curly": "error",
        "default-case": "error",
        "default-case-last": "error",
        // TODO: enable for js: "default-param-last": "error",
        "dot-notation": "error",
        "eqeqeq": "error",
        "grouped-accessor-pairs": "error",
        "guard-for-in": "error",
        "id-length": [
          "warn",
          {
            "min": 3,
            "exceptions": ["id", "x", "y", "z", "i", "j", "me", "$", "el", "_", "fn", "a", "b", "po", "ip", "to"],
          },
        ],
        "max-classes-per-file": ["error", 1],
        "max-depth": ["error", 7],
        "max-nested-callbacks": ["error", 10],
        "max-statements-per-line": ["error", { "max": 1 }],
        "multiline-comment-style": ["error", "starred-block"],
        "new-cap": [
          "error",
          {
            "capIsNew": false,
          },
        ],
        "no-alert": "error",
        "no-array-constructor": "error",
        "no-bitwise": "error",
        "no-caller": "error",
        // Prettier conflict: "no-confusing-arrow": "error",
        "no-console": ["error", { "allow": ["warn"] }],
        "no-div-regex": "error",
        "no-else-return": "error",
        // TODO: enable for js: "no-empty-function": "error",
        "no-eval": "error",
        "no-extend-native": "error",
        "no-extra-bind": "error",
        "no-extra-label": "error",
        "no-floating-decimal": "error",
        //"no-implicit-coercion": "error",
        "no-implicit-globals": "error",
        "no-implied-eval": "error",
        // TODO: enable for js: "no-invalid-this": "off",
        "no-iterator": "error",
        "no-labels": "error",
        "no-lone-blocks": "error",
        "no-lonely-if": "error",
        // TODO: enable for js: "no-loop-func": "error",
        // Prettier conflict: "no-mixed-operators": "error",
        "no-multi-assign": "error",
        "no-multi-str": "error",
        "no-negated-condition": "error",
        "no-nested-ternary": "error",
        "no-new": "error",
        "no-new-func": "error",
        "no-new-object": "error",
        "no-new-wrappers": "error",
        "no-octal-escape": "error",
        "no-proto": "error",
        "no-restricted-imports": ["error", "rxjs/Rx"],
        "no-return-assign": "error",
        "no-return-await": "error",
        "no-sequences": "error",
        // TODO: enable for js: "no-shadow": "error",
        "no-throw-literal": "error",
        "no-undef-init": "error",
        "no-unneeded-ternary": "error",
        // TODO: enable for js: "no-unused-expressions": "error",
        "no-useless-call": "error",
        "no-useless-catch": "error",
        "no-useless-computed-key": "error",
        "no-useless-concat": "error",
        // TODO: enable for js: "no-useless-constructor": "error",
        "no-useless-rename": "error",
        "no-useless-return": "error",
        "no-var": "error",
        "no-void": "error",
        "object-shorthand": "error",
        "one-var": ["error", "never"],
        "prefer-const": "error",
        "prefer-numeric-literals": "error",
        "prefer-object-spread": "error",
        "prefer-promise-reject-errors": "error",
        "prefer-regex-literals": "error",
        "prefer-rest-params": "error",
        "prefer-spread": "error",
        "prefer-template": "error",
        "quote-props": ["error", "as-needed"],
        "radix": "error",
        // TODO: enable for js: "require-await": "error",
        "spaced-comment": ["error", "always"],
        "strict": "error",
        "symbol-description": "error",
        "vars-on-top": "error",
        "yoda": "error",

        // ESLint layout & formatting - https://eslint.org/docs/rules/#layout-formatting
        // Will not be considered. We use prettier for formatting.

        // Angular constructor injection fix: https://github.com/paulomenezes/max-params-no-constructor
        "max-params-no-constructor/max-params-no-constructor": ["error", 5],

        /*
          // https://www.npmjs.com/package/eslint-plugin-import
          "import/no-deprecated": "warn",
          "import/no-extraneous-dependencies": "off",
          "import/no-internal-modules": "off",
          "import/order": "error",
  
          // https://github.com/gajus/eslint-plugin-jsdoc
          "jsdoc/check-alignment": "error",
          "jsdoc/check-indentation": "error",
          "jsdoc/newline-after-description": "error",
          "jsdoc/no-types": "error",
  
          // https://github.com/TristonJ/eslint-plugin-prefer-arrow
          "prefer-arrow/prefer-arrow-functions": "error",
  
          // https://github.com/sindresorhus/eslint-plugin-unicorn
          "unicorn/prefer-ternary": "error",
  
          // https://github.com/cartant/eslint-plugin-rxjs
          */

        // https://github.com/typescript-eslint/typescript-eslint/tree/main/packages/eslint-plugin/src/configs
        // Typescript recommended without type-info

        // Typescript recommended with type-info (currently not implemented)

        // Typescript non-recommended without type-info
        "@typescript-eslint/array-type": "error",
        "@typescript-eslint/ban-tslint-comment": "error", // TODO: Remove after use
        "@typescript-eslint/consistent-type-assertions": "error",
        // "@typescript-eslint/explicit-module-boundary-types": "warn",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-confusing-non-null-assertion": "error",
        "@typescript-eslint/no-invalid-void-type": "error",
        "@typescript-eslint/no-require-imports": "error",
        "@typescript-eslint/prefer-for-of": "error",
        "@typescript-eslint/prefer-literal-enum-member": "error",
        "@typescript-eslint/prefer-optional-chain": "error",
        "@typescript-eslint/prefer-ts-expect-error": "error",
        "@typescript-eslint/unified-signatures": "error",

        // Typescript non-recommended with type-info (currently not implemented)

        // Typescript non-recommended extensions without type-info
        "@typescript-eslint/default-param-last": ["error"],
        "@typescript-eslint/no-duplicate-imports": ["error"],
        "@typescript-eslint/no-invalid-this": ["error"],
        "@typescript-eslint/no-loop-func": ["error"],
        "@typescript-eslint/no-shadow": ["error"],
        "@typescript-eslint/no-unused-expressions": "error",
        "@typescript-eslint/no-useless-constructor": "error",

        // Typescript non-recommended extensions with type-info (currently not implemented)

        // Angular
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": "app",
            "style": "kebab-case",
          },
        ],
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "app",
            "style": "camelCase",
          },
        ],

        /*
          "@angular-eslint/contextual-lifecycle": "error",
          "@angular-eslint/directive-class-suffix": "error",
          "@angular-eslint/component-class-suffix": "error",
          "@angular-eslint/no-conflicting-lifecycle": "error",
          "@angular-eslint/no-host-metadata-property": "error",
          "@angular-eslint/no-input-rename": "error",
          "@angular-eslint/no-inputs-metadata-property": "error",
          "@angular-eslint/no-output-native": "error",
          "@angular-eslint/no-output-on-prefix": "error",
          "@angular-eslint/no-output-rename": "error",
          "@angular-eslint/no-outputs-metadata-property": "error",
          "@angular-eslint/use-lifecycle-interface": "error",
          "@angular-eslint/use-pipe-transform-interface": "error"*/

        "@angular-eslint/no-input-rename": "error",

        // NX - https://github.com/nrwl/nx-examples/blob/master/.eslintrc.json

        // Unicorn - disable undesired recommended https://github.com/sindresorhus/eslint-plugin-unicorn
        "unicorn/no-null": "off",
        "unicorn/numeric-separators-style": "off",
        "unicorn/no-abusive-eslint-disable": "off",
        "unicorn/prevent-abbreviations": "off",
        "unicorn/no-negated-condition": "off",
        "unicorn/no-array-for-each": "off",
        "unicorn/consistent-function-scoping": "off",
        "unicorn/no-array-reduce": "off",
        "unicorn/switch-case-braces": "off",
        "unicorn/prefer-spread": "off",
        "unicorn/no-useless-undefined": "off",
        "unicorn/no-array-callback-reference": "off",
        "unicorn/no-array-method-this-argument": "off",
        "unicorn/no-nested-ternary": "off",
        "unicorn/no-object-as-default-parameter": "off",
        "unicorn/no-await-expression-member": "off",
        "unicorn/prefer-set-has": "off",
        "unicorn/prefer-set-size": "off",
        "unicorn/prefer-switch": "off",
        "unicorn/prefer-top-level-await": "off",
        "unicorn/prefer-native-coercion-functions": "off",
        "unicorn/prefer-dom-node-remove": "off",
        "unicorn/prefer-dom-node-append": "off",
        "unicorn/prefer-node-protocol": "off", // TODO remove after node.js upgrade
        "unicorn/prefer-ternary": ["error", "only-single-line"],
      },
    },
    {
      "files": ["*.html"],
      "plugins": ["@angular-eslint/eslint-plugin-template"],
      "extends": [
        "prettier",
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/recommended",
        "plugin:prettier/recommended",
      ],
      "rules": {
        "@angular-eslint/template/eqeqeq": "error",
        "quotes": ["error", "single", { "avoidEscape": true }],
        "@angular-eslint/template/banana-in-box": "off",
        "@angular-eslint/template/no-negated-async": "off",
        "prettier/prettier": ["error", { "parser": "angular" }],
        "@angular-eslint/template/attribute-quotes": "off",
      },
      "excludedFiles": ["*inline-template-*.component.html"],
    },
  ],
}
